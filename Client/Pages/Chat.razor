@page "/chat"
@using Shared

<h3>Chat</h3>

<div>
    <input @bind="Username" placeholder="Indtast brugernavn" />
</div>

<div>
    <input @bind="NewMessage" placeholder="Skriv en besked..." />
    <button @onclick="SendMessage" disabled="@isSending">Send</button>
</div>

@if (isSending)
{
    <p><em>Sender...</em></p>
}

<ul>
    @foreach (var message in Messages)
    {
        <li><strong>@message.User:</strong> @message.Message <small> (@message.Timestamp.ToString("HH:mm:ss"))</small></li>
    }
</ul>

@code {
    private string Username { get; set; } = "";
    private string NewMessage { get; set; } = "";
    private List<ChatMessage> Messages { get; set; } = new();
    private bool isSending = false; // Ny variabel til at styre "Sender..."-teksten

    [Inject] HttpClient Http { get; set; } = null!;

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(Username) || string.IsNullOrWhiteSpace(NewMessage))
            return;

        var message = new ChatMessage { User = Username, Message = NewMessage };

        isSending = true;  // Aktivér "Sender..."-tekst
        StateHasChanged(); // Opdater UI'et

        await Http.PostAsJsonAsync("/api/SendMessage", message);
        NewMessage = "";

        // Vent 3 sekunder
        await Task.Delay(3000);

        await LoadMessages();

        isSending = false;  // Fjern "Sender..."-tekst
        StateHasChanged(); // Opdater UI'et
    }

    private async Task LoadMessages()
    {
        Messages = await Http.GetFromJsonAsync<List<ChatMessage>>("/api/GetMessages") ?? new();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadMessages();
    }
}
